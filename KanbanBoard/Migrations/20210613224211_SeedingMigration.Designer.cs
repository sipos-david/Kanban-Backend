// <auto-generated />
using System;
using KanbanBoard.DAL.EfDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KanbanBoard.Migrations
{
    [DbContext(typeof(KanbanBoardDbContext))]
    [Migration("20210613224211_SeedingMigration")]
    partial class SeedingMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("DbProjectDbUser", b =>
                {
                    b.Property<int>("ProjectsId")
                        .HasColumnType("integer");

                    b.Property<string>("UsersId")
                        .HasColumnType("text");

                    b.HasKey("ProjectsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("DbProjectDbUser");
                });

            modelBuilder.Entity("DbTaskDbUser", b =>
                {
                    b.Property<int>("TasksId")
                        .HasColumnType("integer");

                    b.Property<string>("UsersId")
                        .HasColumnType("text");

                    b.HasKey("TasksId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("DbTaskDbUser");
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbColumn", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("TableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Name = "Col 1",
                            Number = 0,
                            TableId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Col 2",
                            Number = 1,
                            TableId = 2
                        });
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbComment", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EditedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TaskId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbProject", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Project 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Project 2"
                        });
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbTable", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Name = "Table 1",
                            ProjectId = 1
                        });
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbTask", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ColumnId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            ColumnId = 3,
                            Description = "Task 1: description...",
                            Name = "Task 1",
                            Number = 0
                        },
                        new
                        {
                            Id = 6,
                            ColumnId = 3,
                            Description = "Task 2: description...",
                            Name = "Task 2",
                            Number = 1
                        },
                        new
                        {
                            Id = 7,
                            ColumnId = 3,
                            Description = "Task 3: description...",
                            Name = "Task 3",
                            Number = 2
                        });
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DbProjectDbUser", b =>
                {
                    b.HasOne("KanbanBoard.DAL.EfDbContext.DTO.DbProject", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanBoard.DAL.EfDbContext.DTO.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbTaskDbUser", b =>
                {
                    b.HasOne("KanbanBoard.DAL.EfDbContext.DTO.DbTask", null)
                        .WithMany()
                        .HasForeignKey("TasksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanBoard.DAL.EfDbContext.DTO.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbColumn", b =>
                {
                    b.HasOne("KanbanBoard.DAL.EfDbContext.DTO.DbTable", "Table")
                        .WithMany("Columns")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbComment", b =>
                {
                    b.HasOne("KanbanBoard.DAL.EfDbContext.DTO.DbUser", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanBoard.DAL.EfDbContext.DTO.DbTask", "Task")
                        .WithMany("Comments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbTable", b =>
                {
                    b.HasOne("KanbanBoard.DAL.EfDbContext.DTO.DbProject", "Project")
                        .WithMany("Tables")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbTask", b =>
                {
                    b.HasOne("KanbanBoard.DAL.EfDbContext.DTO.DbColumn", "Column")
                        .WithMany("Tasks")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Column");
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbColumn", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbProject", b =>
                {
                    b.Navigation("Tables");
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbTable", b =>
                {
                    b.Navigation("Columns");
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbTask", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("KanbanBoard.DAL.EfDbContext.DTO.DbUser", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
